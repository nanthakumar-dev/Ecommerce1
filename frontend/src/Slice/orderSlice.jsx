
import {createSlice} from '@reduxjs/toolkit'
const initialState={
    orderDetail:null,
    userOrder:[],
    adminOrder:[],
    isOrderDeleted:false,
    isOrderUpdated:false,
    loading:true
}
const orderSlice=createSlice({
    name:"order",
    initialState,
    reducers:{
        clearCart(state,action){
            
            return{
                ...state,
                loading:false
            }
        },
        orderRequest(state,action){
            return{
                ...state,
                loading:true
            }
        },
        orderSuccess(state,action){
            return{
                ...state,
                loading:false,
                orderDetail:action.payload
            }
        },
        orderFail(state,action){
            return{
                ...state,
                loading:false,
                error:action.payload
            }
        },
        userOrderRequest(state,action){
            return{
                ...state,
                loading:true
            }
        },
        userOrderSuccess(state,action){
            console.log("good")
            return{
                ...state,
                loading:false,
                userOrder:action.payload
            }
        },
        userOrderFail(state,action){
            return{
                ...state,
                loading:false,
                error:action.payload
            }
        },
        orderDetailRequest(state,action){
            return{
                ...state,
                loading:true
            }
        },
        orderDetailSuccess(state,action){
            return{
                ...state,
                loading:false, 
                orderDetail:action.payload,
            }
        },
        orderDetailFail(state,action){
            return{
                ...state,
                loading:false,
                error:action.payload
            }
        },
        adminOrderRequest(state,action){
            return{
                ...state,
                loading:true
            }
        },
        adminOrderSuccess(state,action){
            return{
                ...state,
                loading:false,
                adminOrder:action.payload,
            }
        },
        adminOrderFail(state,action){
            return{
                ...state,
                loading:false,
                error:action.payload
            }
        },
        deleteOrderRequest(state,action){
            return{
                ...state,
                loading:true
            }
        },
        deleteOrderSuccess(state,action){
            return{
                ...state,
                loading:false,
                isOrderDeleted:true
            }
        },
        deleteOrderFail(state,action){
            return{
                ...state,
                loading:false,
                error:action.payload
            }
        },
        updateOrderRequest(state,action){
            return{
                ...state,
                loading:true
            }
        },
        updateOrderSuccess(state,action){
            return{
                ...state,
                loading:false,
                isOrderUpdated:true
            }
        },
        updateOrderFail(state,action){
            return{
                ...state,
                loading:false,
                error:action.payload
            }
        },
        clearOrderDeleted(state,action){
            return{
                ...state,
                isOrderDeleted:false
            }
        },
        clearOrderUpdated(state,action){
            return{
                ...state,
                isOrderUpdated:false
            }
        },
        clearError(state,action){
            return{
                ...state,
                error:null
            }
        },
        
    }
})
const{actions,reducer}=orderSlice
export const {
    orderRequest,orderSuccess,orderFail,
    userOrderRequest,userOrderSuccess,userOrderFail,
    orderDetailRequest,orderDetailSuccess,orderDetailFail,
    adminOrderRequest,adminOrderSuccess,adminOrderFail,
    deleteOrderRequest,deleteOrderSuccess,deleteOrderFail,
    updateOrderRequest,updateOrderSuccess,updateOrderFail,
    clearError,clearOrderDeleted,clearOrderUpdated
}=actions
export default reducer